{"version":3,"sources":["Assets/Images/stripe-logo.jpg","Components/CheckoutPageComponents/Stripe/Stripe.jsx","Components/CheckoutPageComponents/CheckoutItem/CheckoutItem.Style.js","Components/CheckoutPageComponents/CheckoutItem/CheckoutItem.jsx","Pages/Checkout/Checkout.jsx"],"names":["module","exports","mapStateToProps","createStructuredSelector","CurrentUser","SelectCurrentUser","CartItems","SelectCartItems","CartTotal","SelectCartTotal","connect","amount","onToken","token","a","axios","url","method","data","console","log","name","description","image","StripeLogo","ComponentClass","stripeKey","process","label","panelLabel","currency","locale","email","shippingAddress","billingAddress","zipCode","allowRememberMe","reconfigureOnUpdate","priceAndQuantity","css","quantityIcons","disabledQuantityIcons","CheckoutItemContainer","styled","div","id","ImageContainer","ItemName","span","ItemQuantity","QuantityControls","quantity","SvgIcon","svg","QuantityCount","ItemPrice","RemoveBtn","addItemToCart","deleteItem","iid","price","imageUrl","alt","src","onClick","viewBox","stroke","d","cx","cy","r","x1","y1","x2","y2","className","x","y","width","height","rx","length","map","CartItem","key","points"],"mappings":"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","file":"static/js/8.fa27ce64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stripe-logo.c8e1106b.jpg\";","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { SelectCurrentUser } from '../../../Redux/User/UserSelectors';\r\nimport { SelectCartItems, SelectCartTotal } from '../../../Redux/Cart/CartSelectors';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport StripeLogo from '../../../Assets/Images/stripe-logo.jpg';\r\nimport PropTypes from 'prop-types';\r\nconst publishableKey = process.env.REACT_APP_STRIPE_KEY;\r\n\r\nconst Stripe = ({ CurrentUser, CartItems, CartTotal }) => {\r\n  const amount = CartTotal * 100;\r\n\r\n  const onToken = async token => {\r\n    try {\r\n      await axios({\r\n        url: 'payment',\r\n        method: 'post',\r\n        data: { amount, token }\r\n      });\r\n    // await axios({ url: 'cart', method: 'post', data: CartItems });\r\n    } catch (error) {\r\n      console.log('Payment error: ', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      name='REACT SHOP'\r\n      description={`Your Total is: $${CartTotal}.00`}\r\n      image={StripeLogo}\r\n      ComponentClass='StripeCheckouts'\r\n      stripeKey={publishableKey}\r\n      label='PAY WITH CARD'\r\n      panelLabel='PAY NOW'\r\n      amount={amount}\r\n      currency='USD'\r\n      locale='en'\r\n      email={CurrentUser && CurrentUser.email}\r\n      shippingAddress\r\n      billingAddress\r\n      zipCode={false}\r\n      allowRememberMe\r\n      token={onToken}\r\n      reconfigureOnUpdate={false}\r\n    />\r\n  );\r\n};\r\n\r\nStripe.propTypes = {\r\n  CurrentUser: PropTypes.object,\r\n  CartTotal: PropTypes.number\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  CurrentUser: SelectCurrentUser,\r\n  CartItems: SelectCartItems,\r\n  CartTotal: SelectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(Stripe);\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst priceAndQuantity = css`\r\n  width: 16.6%;\r\n  text-align: center;\r\n`;\r\n\r\nconst quantityIcons = css`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst disabledQuantityIcons = css`\r\n  opacity: 0.5;\r\n  &:hover {\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  background-color: ${({ id }) => (id % 2 === 0 ? '#eee' : '#fff')};\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1rem;\r\n  font-weight: 300;\r\n  border-bottom: 2px dashed rgb(216, 216, 216);\r\n  border-right: 2px dashed rgb(216, 216, 216);\r\n  border-left: 2px dashed rgb(216, 216, 216);\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  ${priceAndQuantity}\r\n  padding: 15px;\r\n  margin: 0;\r\n  img {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const ItemName = styled.span`\r\n  width: 40%;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ItemQuantity = styled.span`\r\n  ${priceAndQuantity}\r\n`;\r\n\r\nexport const QuantityControls = styled.span`\r\n  ${({ quantity }) => (quantity > 1 ? quantityIcons : disabledQuantityIcons)}\r\n  padding: 0 10px;\r\n  display: inline-flex;\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const SvgIcon = styled.svg`\r\n  width: 24px;\r\n  height: 24px;\r\n  stroke: rgb(71, 71, 71);\r\n  stroke-width: 1.5;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  fill: none;\r\n`;\r\n\r\nexport const QuantityCount = styled.span`\r\n  vertical-align: middle;\r\n`;\r\n\r\nexport const ItemPrice = styled.span`\r\n  ${priceAndQuantity}\r\n`;\r\n\r\nexport const RemoveBtn = styled.div`\r\n  width: 10%;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItemToCart, deleteItem } from '../../../Redux/Cart/CartActions';\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  ItemName,\r\n  ItemQuantity,\r\n  QuantityControls,\r\n  SvgIcon,\r\n  QuantityCount,\r\n  ItemPrice,\r\n  RemoveBtn\r\n} from './CheckoutItem.Style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CheckoutItem = ({ iid, id, name, price, imageUrl, quantity, addItemToCart, deleteItem }) => {\r\n  return (\r\n    <CheckoutItemContainer id={iid}>\r\n      <ImageContainer>\r\n        <img alt='Item' src={imageUrl} />\r\n      </ImageContainer>\r\n      <ItemName>{name}</ItemName>\r\n      <ItemQuantity>\r\n        <QuantityControls\r\n          quantity={quantity}\r\n          onClick={() => quantity > 1 && deleteItem(id, quantity)}>\r\n          <SvgIcon viewBox='0 0 24 24'>\r\n            <path stroke='none' d='M0 0h24v24H0z' />\r\n            <circle cx='12' cy='12' r='9' />\r\n            <line x1='9' y1='12' x2='15' y2='12' />\r\n          </SvgIcon>\r\n        </QuantityControls>\r\n        <QuantityCount>{quantity}</QuantityCount>\r\n        <QuantityControls\r\n          quantity={2}\r\n          onClick={() =>\r\n            addItemToCart({\r\n              id,\r\n              name,\r\n              price,\r\n              imageUrl\r\n            })\r\n          }>\r\n          <SvgIcon viewBox='0 0 24 24'>\r\n            <path stroke='none' d='M0 0h24v24H0z' />\r\n            <circle cx='12' cy='12' r='9' />\r\n            <line x1='9' y1='12' x2='15' y2='12' />\r\n            <line x1='12' y1='9' x2='12' y2='15' />\r\n          </SvgIcon>\r\n        </QuantityControls>\r\n      </ItemQuantity>\r\n      <ItemPrice>${price}.00</ItemPrice>\r\n      <RemoveBtn onClick={() => deleteItem(id, 1)}>\r\n        <SvgIcon viewBox='0 0 24 24'>\r\n          <path stroke='none' d='M0 0h24v24H0z' />\r\n          <line x1='4' y1='7' x2='20' y2='7' />\r\n          <line x1='10' y1='11' x2='10' y2='17' />\r\n          <line x1='14' y1='11' x2='14' y2='17' />\r\n          <path d='M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12' />\r\n          <path d='M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3' />\r\n        </SvgIcon>\r\n      </RemoveBtn>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nCheckoutItem.propTypes = {\r\n  iid: PropTypes.number,\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  price: PropTypes.number,\r\n  imageUrl: PropTypes.string,\r\n  quantity: PropTypes.number,\r\n  addItemToCart: PropTypes.func,\r\n  deleteItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addItemToCart, deleteItem })(CheckoutItem);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { SelectCartItems, SelectCartTotal } from '../../Redux/Cart/CartSelectors';\r\nimport Stripe from '../../Components/CheckoutPageComponents/Stripe/Stripe';\r\nimport CheckoutItem from '../../Components/CheckoutPageComponents/CheckoutItem/CheckoutItem';\r\nimport './Checkout.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Checkout = ({ CartItems, CartTotal }) => {\r\n  return (\r\n    <div className='CheckoutPage'>\r\n      <h1 className='CheckoutTitle'>\r\n        <svg className='SvgIcon' viewBox='0 0 24 24'>\r\n          <path stroke='none' d='M0 0h24v24H0z' />\r\n          <rect x='3' y='5' width='18' height='14' rx='3' />\r\n          <line x1='3' y1='10' x2='21' y2='10' />\r\n          <line x1='7' y1='15' x2='7.01' y2='15' />\r\n          <line x1='11' y1='15' x2='13' y2='15' />\r\n        </svg>\r\n        Checkout Page\r\n      </h1>\r\n      <div className='CheckoutHeader'>\r\n        <div className='HeaderBlock'>\r\n          <span>product</span>\r\n        </div>\r\n        <div className='HeaderBlock'>\r\n          <span>name</span>\r\n        </div>\r\n        <div className='HeaderBlock'>\r\n          <span>quantity</span>\r\n        </div>\r\n        <div className='HeaderBlock'>\r\n          <span>price</span>\r\n        </div>\r\n        <div className='HeaderBlock'>\r\n          <span>remove</span>\r\n        </div>\r\n      </div>\r\n      {CartItems.length ? (\r\n        <Fragment>\r\n          {CartItems.map((CartItem, id) => (\r\n            <CheckoutItem key={id} iid={id} {...CartItem} />\r\n          ))}\r\n          <div className='Stripe'>\r\n            <Stripe />\r\n          </div>\r\n          <div className='Total'>total: ${CartTotal}.00</div>\r\n        </Fragment>\r\n      ) : (\r\n        <div className='NoItemsFound'>\r\n          <svg className='SvgIcon' viewBox='0 0 24 24'>\r\n            <path stroke='none' d='M0 0h24v24H0z' />\r\n            <polyline points='7 10 12 4 17 10' />\r\n            <path d='M21 10l-2 8a2 2.5 0 0 1 -2 2h-10a2 2.5 0 0 1 -2 -2l-2 -8Z' />\r\n            <circle cx='12' cy='15' r='2' />\r\n          </svg>\r\n          no roducts in the cart.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckout.propTypes = { CartItems: PropTypes.array, CartTotal: PropTypes.number };\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  CartItems: SelectCartItems,\r\n  CartTotal: SelectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}