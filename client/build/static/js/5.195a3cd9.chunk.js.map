{"version":3,"sources":["Components/SigninPageComponents/FormInput/FormInput.Style.js","Components/SigninPageComponents/FormInput/FormInput.jsx","Components/SigninPageComponents/SignIn/SignIn.jsx","Components/SigninPageComponents/SignUP/SignUp.jsx","Components/SigninPageComponents/Snackbar/Snackbar.jsx","Pages/SignIn-SingUp/SignInSignUp.jsx"],"names":["ShrinkLabel","css","Group","styled","div","InputLabel","label","value","Input","input","type","FormInput","id","handleChange","others","title","onChange","htmlFor","connect","EmailSignInStart","GoogleSignInStart","FacebookSignInStart","GithubSignInStart","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","name","autoComplete","required","target","viewBox","stroke","d","onClick","SingUpStart","userCredentials","setUserCredentials","onHandlechange","confirmPassword","cx","cy","r","clearAuthError","message","open","setOpen","useEffect","setTimeout","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","x","y","width","height","rx","mapStateToProps","createStructuredSelector","authErrors","SelectAuthErrors","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","xl","length","map","error","key"],"mappings":"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","file":"static/js/5.195a3cd9.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nconst ShrinkLabel = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: rgb(167, 167, 167);\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  position: relative;\r\n  margin: 40px 0;\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n  color: rgb(73, 73, 73);\r\n  font-size: 0.9rem;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 0.3s ease all;\r\n  ${({ value }) => value && ShrinkLabel}\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  ${({ type }) =>\r\n    type === 'password' &&\r\n    css`\r\n      letter-spacing: 0.3em;\r\n    `}\r\n  background: none;\r\n  font-size: 1.2rem;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid rgb(65, 65, 65);\r\n  margin: 25px 0;\r\n  color: rgb(65, 65, 65);\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:focus ~ ${InputLabel} {\r\n    ${ShrinkLabel}\r\n  }\r\n  &:-webkit-autofill,\r\n  &:-webkit-autofill:hover,\r\n  &:-webkit-autofill:focus,\r\n  &:-webkit-autofill:active {\r\n    box-shadow: 0 0 0 30px rgb(244, 244, 244) inset !important;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Group, Input, InputLabel } from './FormInput.Style';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormInput = ({ id, label, value, handleChange, ...others }) => (\r\n  <Group title={label}>\r\n    <Input id={id} label={label} value={value} onChange={handleChange} {...others} />\r\n    {label && (\r\n      <InputLabel htmlFor={id} value={value}>\r\n        {label}\r\n      </InputLabel>\r\n    )}\r\n  </Group>\r\n);\r\n\r\nFormInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  EmailSignInStart,\r\n  GoogleSignInStart,\r\n  FacebookSignInStart,\r\n  GithubSignInStart\r\n} from '../../../Redux/User/UserActions';\r\nimport FormInput from '../FormInput/FormInput';\r\nimport Submit from '../SubmitButton/SubmitButton';\r\nimport PropTypes from 'prop-types';\r\nimport './SignIn.scss';\r\n\r\nconst SignIn = ({\r\n  EmailSignInStart,\r\n  GoogleSignInStart,\r\n  FacebookSignInStart,\r\n  GithubSignInStart\r\n}) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onEmailChange = e => setEmail(e.target.value);\r\n  const onPasswordChange = e => setPassword(e.target.value);\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    EmailSignInStart({ email, password });\r\n  };\r\n\r\n  return (\r\n    <div className='SignIn'>\r\n      <h2 className='Title'>i already have an account</h2>\r\n      <span className='Subtitle'>sign in with your email and password</span>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          label='Email'\r\n          id='email'\r\n          value={email}\r\n          autoComplete='new_email'\r\n          required\r\n          handleChange={onEmailChange}\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          label='Password'\r\n          id='password'\r\n          value={password}\r\n          autoComplete='new-password'\r\n          required\r\n          handleChange={onPasswordChange}\r\n        />\r\n        <div className='Buttons'>\r\n          <Submit type='submit'>\r\n            <svg viewBox='0 0 24 24'>\r\n              <path stroke='none' d='M0 0h24v24H0z' />\r\n              <path d='M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2' />\r\n              <path d='M20 12h-13l3 -3m0 6l-3 -3' />\r\n            </svg>\r\n            sign in with email\r\n          </Submit>\r\n          <Submit type='button' onClick={GoogleSignInStart}>\r\n            <svg viewBox='0 0 24 24'>\r\n              <path stroke='none' d='M0 0h24v24H0z' />\r\n              <path d='M17.788 5.108A9 9 0 1021 12h-8' />\r\n            </svg>\r\n            sign in with google\r\n          </Submit>\r\n        </div>\r\n        <div className='Buttons'>\r\n          <Submit type='button' onClick={FacebookSignInStart}>\r\n            <svg viewBox='0 0 24 24'>\r\n              <path stroke='none' d='M0 0h24v24H0z' />\r\n              <path d='M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3' />\r\n            </svg>\r\n            sign in with fb\r\n          </Submit>\r\n          <Submit type='button' onClick={GithubSignInStart}>\r\n            <svg viewBox='0 0 24 24'>\r\n              <path stroke='none' d='M0 0h24v24H0z' />\r\n              <path d='M9 19c-4.286 1.35-4.286-2.55-6-3m12 5v-3.5c0-1 .099-1.405-.5-2 2.791-.3 5.5-1.366 5.5-6.04a4.567 4.567 0 0 0 -1.333 -3.21 4.192 4.192 0 00-.08-3.227s-1.05-.3-3.476 1.267a12.334 12.334 0 0 0 -6.222 0C6.462 2.723 5.413 3.023 5.413 3.023a4.192 4.192 0 0 0 -.08 3.227A4.566 4.566 0 004 9.486c0 4.64 2.709 5.68 5.5 6.014-.591.589-.56 1.183-.5 2V21' />\r\n            </svg>\r\n            sign in with github\r\n          </Submit>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  EmailSignInStart: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {\r\n  EmailSignInStart,\r\n  GoogleSignInStart,\r\n  FacebookSignInStart,\r\n  GithubSignInStart\r\n})(SignIn);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SingUpStart } from '../../../Redux/User/UserActions';\r\nimport FormInput from '../FormInput/FormInput';\r\nimport SubmitBtn from '../SubmitButton/SubmitButton';\r\nimport './SignUp.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignUp = ({ SingUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState(null);\r\n\r\n  const onHandlechange = e => {\r\n    e.preventDefault();\r\n    setUserCredentials({ ...userCredentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    SingUpStart(userCredentials);\r\n  };\r\n\r\n  return (\r\n    <div className='SignUp'>\r\n      <h2 className='Title'>i do not have an account</h2>\r\n      <span className='Subtitle'>sign up with your email and password</span>\r\n      <form onSubmit={onSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          id='name'\r\n          name='name'\r\n          label='Name'\r\n          value={(userCredentials && userCredentials.name) || ''}\r\n          // autoComplete='new_name'\r\n          required\r\n          handleChange={onHandlechange}\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          id='email'\r\n          name='email'\r\n          label='Email'\r\n          value={(userCredentials && userCredentials.email) || ''}\r\n          autoComplete='new_email'\r\n          required\r\n          handleChange={onHandlechange}\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          id='password'\r\n          name='password'\r\n          label='Password'\r\n          value={(userCredentials && userCredentials.password) || ''}\r\n          autoComplete='new-password'\r\n          required\r\n          handleChange={onHandlechange}\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          id='confirmPassword'\r\n          name='confirmPassword'\r\n          label='Confirm Password'\r\n          value={(userCredentials && userCredentials.confirmPassword) || ''}\r\n          autoComplete='new-password'\r\n          required\r\n          handleChange={onHandlechange}\r\n        />\r\n        <div className='Buttons'>\r\n          <SubmitBtn type='submit'>\r\n            <svg viewBox='0 0 24 24'>\r\n              <path stroke='none' d='M0 0h24v24H0z' />\r\n              <circle cx='9' cy='7' r='4' />\r\n              <path d='M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2' />\r\n              <path d='M16 11h6m-3 -3v6' />\r\n            </svg>\r\n            sign up with email\r\n          </SubmitBtn>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = { SingUpStart: PropTypes.func.isRequired };\r\n\r\nexport default connect(null, { SingUpStart })(SignUp);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearAuthError } from '../../../Redux/User/UserActions';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport './Snackbar.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SnackbarComponent = ({ message = null, clearAuthError }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    message && setOpen(true);\r\n    setTimeout(() => {\r\n      clearAuthError();\r\n    }, 5000);\r\n  }, [message, clearAuthError]);\r\n\r\n  const handleClose = (e, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left'\r\n      }}\r\n      open={open}\r\n      autoHideDuration={5000}\r\n      onClose={handleClose}\r\n      message={<div className='ErrorMessage'>{`${message}`}</div>}\r\n      action={\r\n        <div className='CloseBtn' onClick={handleClose}>\r\n          <svg viewBox='0 0 24 24'>\r\n            <path stroke='none' d='M0 0h24v24H0z' />\r\n            <rect x='4' y='4' width='16' height='16' rx='2' />\r\n            <path d='M10 10l4 4m0 -4l-4 4' />\r\n          </svg>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSnackbarComponent.propTypes = { message: PropTypes.string, clearAuthError: PropTypes.func };\r\n\r\nexport default connect(null, { clearAuthError })(SnackbarComponent);\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { SelectAuthErrors } from '../../Redux/User/UserSelectors';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SignIn from '../../Components/SigninPageComponents/SignIn/SignIn';\r\nimport SignUp from '../../Components/SigninPageComponents/SignUP/SignUp';\r\nimport Snackbar from '../../Components/SigninPageComponents/Snackbar/Snackbar';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignInSignUp = ({ authErrors }) => {\r\n  return (\r\n    <Fragment>\r\n      <Grid container direction='row' justify='center' alignItems='flex-start'>\r\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n          <SignIn />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n          <SignUp />\r\n        </Grid>\r\n      </Grid>\r\n      {authErrors.length > 0 &&\r\n        authErrors.map((error, id) => <Snackbar key={id} message={error} />)}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSignInSignUp.propTypes = {\r\n  authErrors: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  authErrors: SelectAuthErrors\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignInSignUp);\r\n"],"sourceRoot":""}